DISTRIBUTIONS="kernel.txz base.txz"
export nonInteractive=1

export ZFSBOOT_VDEV_TYPE="raidz2"
export ZFSBOOT_DISKS="ada0 ada1 ada2 ada3"
export ZFSBOOT_POOL_CREATE_OPTIONS="-O checksum=sha256 -O compression=lz4 -O atime=off -O utf8only=on -O normalization=formD"
export ZFSBOOT_GNOP_4K_FORCE_ALIGN=1
export ZFSBOOT_DATASETS="
# DATASET OPTIONS (comma or space separated; or both)

# Boot Environment [BE] root and default boot dataset
/ROOT mountpoint=none
/ROOT/default mountpoint=/

# Compress /tmp, allow exec but not setuid
/tmp mountpoint=/tmp,exec=on,setuid=off

# Don't mount /usr so that 'base' files go to the BEROOT
/usr mountpoint=/usr,canmount=off

# Home directories separated so they are common to all BEs
/usr/home # NB: /home is a symlink to /usr/home

# Ports tree
/usr/ports setuid=off

# Source tree (compressed)
/usr/src

# Create /var and friends
/var mountpoint=/var,canmount=off
/var/crash exec=off,setuid=off
/var/log exec=off,setuid=off
/var/mail atime=on
/var/tmp setuid=off

# Create /srv shares
/srv mountpoint=/srv,canmount=off,exec=off,setuid=off,casesensitivity=mixed
/srv/homes
/srv/warpdrive
/srv/ydrive

# Create location for archived home folders
/var/archives canmount=off,exec=off,setuid=off,casesensitivity=mixed
"

#!/bin/sh

# Magic that sets the active bit in the MBR for the dumb firmware on ASRock mobos
sysctl kern.geom.debugflags=0x10
dd if=/dev/ada0 of=/tmp/,mbr count=1
printf 's/\\(\220\\{8\\}\000\\{6\\}\\)\000\000/\\1\200\000/\nw\n' | ed /tmp/,mbr
for i in 0 1 2 3; do
	dd if=/tmp/,mbr of=/dev/ada$i count=1
done

# Set timezone
tzsetup America/Chicago

# Use DHCP on first boot and enable sshd
printf 'ifconfig_bge0="DHCP"\nzfs_enable=YES\nsshd_enable=YES' > /etc/rc.conf

# Set nameserver so pkg below will work
echo "nameserver 192.168.42.3" > /etc/resolv.conf

# Install pkg
env ASSUME_ALWAYS_YES=true pkg bootstrap

# Install sudo
pkg install -y sudo
# Enable sudo by wheel group
printf '/wheel ALL=(ALL) ALL/s/# //\nw\n' | ed /usr/local/etc/sudoers

# Install python
pkg install -y python

# Add user admin
echo cv::::::::: | adduser -f - -G wheel -w none
while :; do
	passwd cv && break
done

# Lock root user
pw lock root
